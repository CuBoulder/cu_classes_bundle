<?php
/**
 * @file
 * Code for the CU Class Views feature.
 */

include_once 'cu_class_views.features.inc';

function cu_class_views_menu() {
  $items = array();
  $items['class-views/lookup/%'] = array(
    'title' => 'Course Subjects by College/School',
    'page callback' => 'cu_class_views_subject_callback',
    'page arguments' => array(3),
    'access callback' => TRUE,
  );
  $items['admin/settings/classes/search'] = array(
    'title' => 'Class Search Settings',
    'description' => 'Configure the class search.',
    'page callback' => 'drupal_get_form',
    'file' => 'cu_class_views.admin.inc',
    'page arguments' => array('cu_class_search_settings'),
    'access arguments' => array('administer class content'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function cu_class_views_block_info() {
  $blocks = array();
  $blocks['course_search_form'] = array(
    'info' => t('Course Search Form'),
  );
  return $blocks;
}
function cu_class_views_block_view($delta = '') {
  switch ($delta) {
    case 'course_search_form':

      $view = views_get_view('cu_classes');
      $view->set_display('page');
      $view->init_handlers();
      $exposed_form = $view->display_handler->get_plugin('exposed_form');
      $form =  $exposed_form->render_exposed_form(true);

      $block['content']['#markup'] = $form;
      $block['content']['#prefix'] = '<div class="view-cu-classes">';
      $block['content']['#suffix'] = '</div>';
      break;
  }
  return $block;
}

function cu_class_views_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#id'] == 'views-exposed-form-cu-classes-page') {

    // Term Filter
    $term_options_saved = variable_get('cu_class_search_term', array());
    foreach ($term_options_saved as $key => $option) {
      if ($option) {
        $term = cu_class_view_term_code_translate($option);
        $options[$key] =  ucfirst($term['term'] . ' ' . $term['year']);
      }
    }
    $form['field_class_strm_value']['#type'] = 'select';
    $form['field_class_strm_value']['#options'] = $options;
    $form['field_class_strm_value']['#multiple'] = FALSE;
    unset($form['field_class_strm_value']['#size']);
    $form['field_class_strm_value']['#empty_value'] = '';

    // Check class view settings for what campuses to display
    if (count($options) < 2) {
      $form['field_class_strm_value']['#value'] = key($options);
      $form['field_class_strm_value']['#type'] = 'hidden';
      drupal_add_css('#edit-field-class-strm-value-wrapper { display:none; }', array('group' => CSS_THEME, 'type' => 'inline'));
    }

    // Check to see if there is only 1 campus imported
    $total_terms = cu_class_views_get_terms();
    if (count($total_terms) < 2) {
      $form['field_class_strm_value']['#value'] = current($total_terms);
      $form['field_class_strm_value']['#type'] = 'hidden';
      drupal_add_css('#edit-field-class-strm-value-wrapper { display:none; }', array('group' => CSS_THEME, 'type' => 'inline'));
    }


    // Campus Filter
    $campus_options_saved = variable_get('cu_class_search_campus', array());
    $campus_options = array(
      'CUBLD' => 'Boulder',
      'CUSPG' => 'Colorado Springs',
      'CUDEN' => 'Denver',
    );
    foreach ($campus_options as $key => $option) {
      if (empty($campus_options_saved[$key])) {
        unset($campus_options[$key]);
      }
    }
    $form['field_class_institution_value']['#type'] = 'select';
    $form['field_class_institution_value']['#options'] = $campus_options;
    $form['field_class_institution_value']['#multiple'] = FALSE;
    unset($form['field_class_institution_value']['#size']);
    $form['field_class_institution_value']['#empty_value'] = '';

    // Check class view settings for what campuses to display
    if (count($campus_options) < 2) {
      $form['field_class_institution_value']['#value'] = key($campus_options);
      $form['field_class_institution_value']['#type'] = 'hidden';
      drupal_add_css('#edit-field-class-institution-value-wrapper { display:none; }', array('group' => CSS_THEME, 'type' => 'inline'));
    }
    // Check to see if there is only 1 campus imported
    $total_inst = cu_class_views_get_institutions();
    if (count($total_inst) < 2) {
      $form['field_class_institution_value']['#value'] = current($total_inst);
      $form['field_class_institution_value']['#type'] = 'hidden';
      drupal_add_css('#edit-field-class-institution-value-wrapper { display:none; }', array('group' => CSS_THEME, 'type' => 'inline'));
    }

    // College/School filter
    $form['field_class_subject_top_level_value']['#type'] = 'select';
    $form['field_class_subject_top_level_value']['#options'] = cu_class_views_options_top_level();
    $form['field_class_subject_top_level_value']['#multiple'] = FALSE;
    unset($form['field_class_subject_top_level_value']['#size']);
    $form['field_class_subject_top_level_value']['#empty_value'] = '';

    // Ajax for dependent options
    $top_selected = NULL;
    /*
    $top_selected = isset($form_state['values']['field_class_subject_top_level_value']) ? $form_state['values']['field_class_subject_top_level_value'] : '';
    $form['field_class_subject_top_level_value']['#ajax'] = array(

      'method' => 'replace',
      'effect' => 'fade',
      'callback' => 'cu_class_views_subject_dependent_callback',
      'wrapper' => 'edit-field-class-subject-value',
    );
    */

    $combine = $form['#info']['filter-combine'];
    // Remove 2 lines below and uncomment following two lines to display keyword search
    unset($form['#info']['filter-combine']);
    unset($form['combine']);
    //$combine = $form['#info']['filter-combine'];
    //$form['#info'] = array('filter-combine' => $combine) + $form['#info'];
    // Subject
    $form['field_class_subject_value']['#type'] = 'select';
    $form['field_class_subject_value']['#options'] = cu_class_views_options_subjects($top_selected);
    unset($form['field_class_subject_value']['#size']);
    $form['field_class_subject_value']['#multiple'] = FALSE;
    $form['field_class_subject_value']['#empty_value'] = '';
    $form['field_class_subject_value']['#prefix'] = '<span id="class-search-subject-list">';
    $form['field_class_subject_value']['#suffix'] = '</span>';

    // Format
    $form['field_class_instruction_mode_des_value']['#type'] = 'select';
    $form['field_class_instruction_mode_des_value']['#options'] = cu_class_views_options_formats();
    unset($form['field_class_instruction_mode_des_value']['#size']);
    $form['field_class_instruction_mode_des_value']['#multiple'] = FALSE;
    $form['field_class_instruction_mode_des_value']['#empty_value'] = '';

    // Submit button classes
    $form['submit']['#attributes']['class'][] = 'button button-blue';
    $form['reset']['#attributes']['class'][] = 'button button-gray';

    // Moving submit and reset buttons so they share a container
    $form['actions']['submit'] = $form['submit'];
    $form['actions']['reset_form'] = array(
      '#type' => 'button',
      '#button_type' => 'reset',
      '#value' => 'Reset',
      '#validate' => array('cu_class_views_form_reset'),
      '#attributes' => array('class' => array('button', 'button-gray')),
    );
    $form['actions']['#prefix'] = '<div class="class-search-actions">';
    $form['actions']['#suffix'] =  '</div>';
    unset($form['submit']);
    unset($form['reset']);

    // Adding hidden value so we can tell if form has been submitted or not
    $form['submitted'] = array(
      '#type' => 'hidden',
      '#value' => TRUE,
    );
  }
}

function cu_class_views_subject_dependent_callback($form, $form_state) {
  return $form['field_class_subject_value'];
}

/**
 * Implements hook_views_pre_render().
 *
 * Adds column headers, removed result counter on default view.
 */
function cu_class_views_views_pre_render(&$view) {
  if ($view->name == 'cu_classes') {

    // Do not show result count on default view
    if (!$_GET['submitted']) {
      unset($view->query->pager->display->handler->handlers['header']['result']);
    }

    $view_headers = '<div class="class-view-column-headers" aria-hidden="true" role="presentation">
      <div class="row clearfix">
        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
          Class
        </div>
        <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
          Campus
        </div>
        <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
          Term
        </div>
        <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
          Format
        </div>
        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
          Schedule
        </div>
      </div>
    </div>';
    $view->attachment_before = $view_headers;
  }
}

function cu_class_views_form_reset($form, $form_state) {
  if ($form_state['values']['op'] == 'Reset') {
    drupal_goto('courses/search');
  }
}

function cu_class_views_subject_callback($group) {
  // Get all available subjects
  $all_subjects = cu_class_subject_values();
  // Get all subjects grouped by college/school
  $grouped_subjects = cu_class_views_colleges_schools();
  // Get all subject for the college/school we want
  $single_group_subjects = $grouped_subjects[$group]['subjects'];
  // Remove any items that are not part of the college/school
  foreach ($all_subjects as $key => $subject) {
    if (empty($single_group_subjects[$key])) {
      unset($all_subjects[$key]);
    }
  }
  return $all_subjects;
}

/**
 * Implements hook_theme_registry_alter().
 */
function cu_class_views_theme_registry_alter(&$theme_registry) {
  $module_path = drupal_get_path('module', 'cu_class_views');
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'cu_class', $module_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('cu_class');
  foreach ($hooks as $h) {
    if (isset($theme_registry[$h]['theme paths'])) {
      $first_element = array_shift($theme_registry[$h]['theme paths']);
      array_unshift($theme_registry[$h]['theme paths'], array_shift($theme_registry[$h]['theme paths']), $module_path);
    }
  }
}

function cu_class_views_options_top_level() {
  if ($cache = cache_get('cu_class_search_top_level')) {
    $options = $cache->data;
  } else {

    $available = cu_class_views_available_orgs();
    $options = array();
    $query = db_select('cu_courses_organizations', 'orgs');
    $query->fields('orgs', array('code', 'value', 'readable_value', 'level', 'status'));
    $query->orderBy('orgs.value', 'ASC');
    $query->condition('orgs.level', 1, '=');
    $query->condition('orgs.status', 1, '=');
    $results = $query->execute()->fetchAllAssoc('code');

    $institution_codes = array(
      'B' => 'Boulder Campus',
      'C' => 'Colorado Springs Campus',
      'D' => 'Denver Campus',
    );

    foreach ($results as $key => $result) {
      if (isset($available[$key])) {
        // Get institution code.
        $code= substr($key, 0, 1);
        $options[$institution_codes[$code]][$key] = $result->value;
      }
    }

    // Remove option group if only one campus present.
    if (count($options) === 1) {
      $options = array_shift($options);
    }

    // Save to cache
    cache_set('cu_class_search_top_level', $options, 'cache', time() + 60 * 60 * 24);
  }


  return $options;
}

function cu_class_views_available_orgs() {
  $options = array();
  $query = db_select('field_data_field_class_subject_top_level', 'orgs');
  $query->fields('orgs', array('field_class_subject_top_level_value'));
  $query->condition('orgs.field_class_subject_top_level_value', 'NULL', '!=');
  $query->distinct();
  $query->groupBy('orgs.field_class_subject_top_level_value');
  $results = $query->execute()->fetchAllAssoc('field_class_subject_top_level_value');
  foreach ($results as $key => $result) {
    $options[$key] = $key;
  }
  return $options;
}

function cu_class_views_options_subjects($parent = NULL) {
  if ($cache = cache_get('cu_class_search_subjects')) {
    $options = $cache->data;
  }
  else {
    $options = array();
    $available = cu_class_views_available_subjects();
    $query = db_select('cu_courses_subjects', 'subjects');
    $query->fields('subjects', array('code', 'value', 'readable_value', 'parent_org', 'status'));
    $query->orderBy('subjects.value', 'ASC');
    $query->condition('subjects.status', 1, '=');

    if ($parent && ($parent != '')) {
      $query->join('cu_courses_organizations', 'orgs', 'subjects.parent_org = orgs.code');
      $query->fields('orgs', array('code', 'parent_org'));
      $query->condition('orgs.parent_org', $parent, '=');
    }
    $results = $query->execute()->fetchAllAssoc('code');
    foreach ($results as $key => $result) {
      if (isset($available[$key])) {
        $options[$result->value] = $result->value;
      }
    }
    // Save to cache
    cache_set('cu_class_search_subjects', $options, 'cache', time() + 60 * 60 * 24);
  }
  // Return unique values to avoid duplicates in display.
  $options = array_unique($options);
  // Sort options alphabetically since first unique value might be out of order.
  asort($options);
  return $options;
}

function cu_class_views_available_subjects() {
  $options = array();
  $query = db_select('field_data_field_class_subject', 'subjects');
  $query->fields('subjects', array('field_class_subject_value'));
  $query->distinct();
  $query->groupBy('subjects.field_class_subject_value');
  $results = $query->execute()->fetchAllAssoc('field_class_subject_value');
  foreach ($results as $key => $result) {
    $options[$key] = $key;
  }
  return $options;
}



function cu_class_views_options_formats() {
  //$available_formats = cu_class_views_available_formats();
  if ($cache = cache_get('cu_class_search_formats')) {
    $options = $cache->data;
  }
  else {
    $options = array();
    $query = db_select('field_data_field_class_instruction_mode_des', 'mode');
    $query->fields('mode', array('field_class_instruction_mode_des_value'));
    $query->distinct();
    $query->groupBy('mode.field_class_instruction_mode_des_value');
    $results = $query->execute()->fetchAllAssoc('field_class_instruction_mode_des_value');
    foreach ($results as $key => $result) {
      $options[$key] = $key;
    }
    // Save to cache
    cache_set('cu_class_search_formats', $options, 'cache', time() + 60 * 60 * 24);
  }

  return $options;
}

function cu_class_views_available_formats($code = NULL) {
  $formats = array(
    'HY' => 'Hybrid',
    'OL' => 'Online',
    'OS' => 'Online, self-paced',
    'OT' => 'Online, term-based',
    'P' => 'On Campus',
  );
  if ($code) {
    return $formats[$code];
  }
  return $formats;
}

function cu_class_views_get_course_title($class_id) {
  $query = db_select('cu_course', 'course');
  $query->fields('course', array('course_id', 'title'));
  $query->join('cu_class', 'class', 'class.course_id = course.course_id');
  $query->fields('class', array('class_id', 'course_id'));
  $query->condition('class.class_id', $class_id, '=');
  $query->distinct();
  $query->groupBy('course.title');
  $results = $query->execute()->fetchAssoc();

  return $results['title'];
}

function cu_class_views_institutions($campus) {
  $campus_options = array(
    'CUBLD' => 'Boulder',
    'CUSPG' => 'Colorado Springs',
    'CUDEN' => 'Denver',
  );
  return $campus_options[$campus];
}

function cu_class_views_get_terms() {
  if ($cache = cache_get('cu_class_search_terms')) {
    $terms = $cache->data;
  }
  else {
    $terms = array();
    $query = db_select('field_data_field_class_strm', 'term');
    $query->fields('term', array('field_class_strm_value'));
    $query->distinct();
    $query->groupBy('term.field_class_strm_value');
    $results = $query->execute()->fetchAll();
    foreach ($results as $result) {
      $terms[] = $result->field_class_strm_value;
    }
    // Save to cache
    cache_set('cu_class_search_terms', $terms, 'cache', time() + 60 * 60 * 24);
  }
  return $terms;
}

function cu_class_views_get_institutions() {
  if ($cache = cache_get('cu_class_search_institutions')) {
    $insts = $cache->data;
  }
  else {
    $insts = array();
    $query = db_select('field_data_field_class_institution', 'inst');
    $query->fields('inst', array('field_class_institution_value'));
    $query->distinct();
    $query->groupBy('inst.field_class_institution_value');
    $results = $query->execute()->fetchAll();
    foreach ($results as $result) {
      $insts[] = $result->field_class_institution_value;
    }
    // Save to cache
    cache_set('cu_class_search_institutions', $insts, 'cache', time() + 60 * 60 * 24);
  }
  return $insts;
}

/**
 * Translate a term code to year and semester.
 */
function cu_class_view_term_code_translate($term_code) {
  $codes[1] = 'spring';
  $codes[4] = 'summer';
  $codes[7] = 'fall';
  $code = substr($term_code, -1, 1);
  $term['term'] = $codes[$code];
  $term['year'] = '20' . substr($term_code, -3, 2);
  return $term;
}

function cu_class_views_session_translator($session) {
  $sessions = array(
    'BAM'	=> 'Maymester',
    'BAS'	=> 'Session A',
    'BBS'	=> 'Session B',
    'BCS'	=> 'Session C',
    'BD1'	=> 'Session D',
    'BES'	=> 'Session E',
    'BFS'	=> 'Session F',
    'BGS'	=> 'Augmester',
  );
  if (isset($sessions[$session])) {
    return $sessions[$session];
  }
}
